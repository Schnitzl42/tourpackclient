package at.sti_innsbruck.tourpackclient.logic.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import at.sti_innsbruck.tourpackclient.logic.greendao.Thing;
import at.sti_innsbruck.tourpackclient.logic.greendao.ExtraProperties;

import at.sti_innsbruck.tourpackclient.logic.greendao.ThingDao;
import at.sti_innsbruck.tourpackclient.logic.greendao.ExtraPropertiesDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig thingDaoConfig;
    private final DaoConfig extraPropertiesDaoConfig;

    private final ThingDao thingDao;
    private final ExtraPropertiesDao extraPropertiesDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        thingDaoConfig = daoConfigMap.get(ThingDao.class).clone();
        thingDaoConfig.initIdentityScope(type);

        extraPropertiesDaoConfig = daoConfigMap.get(ExtraPropertiesDao.class).clone();
        extraPropertiesDaoConfig.initIdentityScope(type);

        thingDao = new ThingDao(thingDaoConfig, this);
        extraPropertiesDao = new ExtraPropertiesDao(extraPropertiesDaoConfig, this);

        registerDao(Thing.class, thingDao);
        registerDao(ExtraProperties.class, extraPropertiesDao);
    }
    
    public void clear() {
        thingDaoConfig.getIdentityScope().clear();
        extraPropertiesDaoConfig.getIdentityScope().clear();
    }

    public ThingDao getThingDao() {
        return thingDao;
    }

    public ExtraPropertiesDao getExtraPropertiesDao() {
        return extraPropertiesDao;
    }

}
